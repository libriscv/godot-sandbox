#!/usr/bin/env python
from misc.utility.scons_hints import *

Import("env")
Import("env_modules")

if env["platform"] == "windows":
	env.Prepend(LIBS=['ws2_32']) # for socket calls

def get_sufix():
    suffix = ".{}.{}".format(env["platform"], env["target"])
    # In godot it's "linuxbsd"
    suffix = suffix.replace("linuxbsd", "linux")
    # Only take release
    suffix = suffix.replace("editor", "template_release")
    suffix = suffix.replace("template_debug", "template_release")
    if env.dev_build:
        suffix += ".dev"
    if env["precision"] == "double":
        suffix += ".double"
    suffix += "." + env["arch"]
    if not env["threads"]:
        suffix += ".nothreads"
    return suffix

# Libraries
if env["platform"] == "macos" or env["platform"] == "ios":
    base_path = "#modules/sandbox/bin/addons/godot_sandbox/bin/libgodot_riscv{}.framework".format(get_sufix())
    base_file = "libgodot_riscv{}".format(get_sufix())
else:
    base_path = "#modules/sandbox/bin/addons/godot_sandbox/bin"
    base_file = "libgodot_riscv{}".format(get_sufix())

env.Append(LIBS=[base_file])
env.Append(LIBPATH=[base_path])

# Godot-cpp
base_path = "#modules/sandbox/ext/godot-cpp/bin"
base_file = "libgodot-cpp{}".format(get_sufix())

env.Append(LIBS=[base_file])
env.Append(LIBPATH=[base_path])

# Sources
env_gdextension = env_modules.Clone()

env_gdextension.add_source_files(env.modules_sources, "*.cpp")
